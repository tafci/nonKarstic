# Generated by Django 2.0.3 on 2018-04-07 08:05

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('cim', models.CharField(help_text='A csatolmány elnevezése', max_length=255, verbose_name='Cím')),
                ('leiras', models.TextField(help_text='A csatolmány szöveges leírása', verbose_name='Leírás')),
                ('attachment', models.FileField(upload_to='', verbose_name='Csatolmány')),
                ('tipus', models.CharField(choices=[('PIC', 'Fénykép'), ('MAP', 'Térkép'), ('VEC', 'Vektoros állomány'), ('DOC', 'Dokumentum')], max_length=3, verbose_name='Csatolmány típusa')),
            ],
            options={
                'ordering': ['cim', 'tipus'],
            },
        ),
        migrations.CreateModel(
            name='Cave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('kataszteri_szam', models.CharField(help_text='A magyarországi barlangkataszterben a barlang egyedi azonosítója', max_length=50, verbose_name='Kataszteri szám')),
                ('nev', models.CharField(max_length=255, verbose_name='Barlang neve')),
                ('szinonimak', models.CharField(blank=True, max_length=255, null=True, verbose_name='Barlang további elnevezései')),
                ('leiras', models.TextField(verbose_name='Leírás')),
                ('kozet', models.IntegerField(choices=[(10, 'Andezit'), (20, 'Andezittufa'), (30, 'Bazalt'), (40, 'Bazalttufa'), (50, 'Bazalttufit'), (60, 'Dácit'), (70, 'Gránit'), (80, 'Gránitporfír'), (90, 'Homokkő'), (100, 'Kovásodott andezitagglomerátum'), (110, 'Kvarcit'), (120, 'Lösz'), (130, 'Mésztufa'), (140, 'Riolit'), (150, 'Riolittufa'), (160, 'Tráchit'), (170, 'Zöldpala')], verbose_name='Befoglaló kőzet')),
                ('vedettseg', models.IntegerField(choices=[(10, 'Védett'), (20, 'Fokozottan védett'), (30, 'Megkülönböztetetten védett')], verbose_name='Védettség')),
                ('lathatosag', models.IntegerField(choices=[(10, 'Szabadon látogatható'), (20, 'Fokozottan védett területen nyíló'), (30, 'NPI hozzájárulásával látogatható (jogszabályban nevesített)'), (40, 'NPI hozzájárulásával látogatható (magánterületen nyíló)'), (50, 'Lezárt'), (60, 'Beomlott, jelenleg nem látogatható')], verbose_name='Látogathatóság')),
                ('illetekes_np', models.IntegerField(choices=[(10, 'Aggteleki Nemzeti Park'), (20, 'Balaton-felvidéki Nemzeti Park'), (30, 'Bükki Nemzeti Park'), (40, 'Duna-Dráva Nemzeti Park'), (50, 'Duna-Ipoly Nemzeti Park'), (60, 'Fertő-Hanság Nemzeti Park'), (70, 'Hortobágyi Nemzeti Park'), (80, 'Kiskunsági Nemzeti Park'), (90, 'Kőrös-Maros Nemzeti Park'), (100, 'Őrségi Nemzeti Park')], verbose_name='Illetékes NPI')),
                ('eov_x', models.FloatField(verbose_name='EOV X')),
                ('eov_y', models.FloatField(verbose_name='EOV Y')),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_cave_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_cave_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nev'],
            },
        ),
        migrations.CreateModel(
            name='CaveExtent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('hossz', models.FloatField(verbose_name='Hossz')),
                ('vertikalis', models.FloatField(verbose_name='Vertikális kiterjedés')),
                ('melyseg', models.FloatField(verbose_name='Mélység')),
                ('magassag', models.FloatField(verbose_name='Magasság')),
                ('barlang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Cave')),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_caveextent_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_caveextent_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('nev', models.CharField(max_length=255, verbose_name='Név')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_city_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_city_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nev'],
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('nev', models.CharField(max_length=255, verbose_name='Név')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_county_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_county_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nev'],
            },
        ),
        migrations.CreateModel(
            name='DataSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('ev', models.DateField(verbose_name='Kutatás éve')),
                ('feltaras', models.BooleanField(help_text='A kutatás során történt-e feltárás', verbose_name='Feltárás')),
                ('geologia', models.BooleanField(help_text='Történt-e geológiai feltárás', verbose_name='Geológia')),
                ('morfologia', models.BooleanField(help_text='Történt-e morfológiai kutatás', verbose_name='Morfológia')),
                ('hidrologia', models.BooleanField(help_text='Történt-e hidrológiai kutatás', verbose_name='Hidrológia')),
                ('klima', models.BooleanField(help_text='Történt-e klimatológiai kutatás', verbose_name='Klíma')),
                ('radon', models.BooleanField(help_text='Történt-e radon szint mérés', verbose_name='Radon')),
                ('vedelem', models.BooleanField(help_text='Történt-e barlang védelem kiépítés', verbose_name='Védelem')),
                ('geofizika', models.BooleanField(help_text='Történt-e geofizikai kutatás', verbose_name='Geofizika')),
                ('oslenytan', models.BooleanField(help_text='Történt-e őslénytani kutatás', verbose_name='Őslénytan')),
                ('regeszet', models.BooleanField(help_text='Történt-e régészeti feltárás', verbose_name='Régészet')),
                ('biologia', models.BooleanField(help_text='Történt-e biológiai kutatás', verbose_name='Biológia')),
                ('denever', models.BooleanField(help_text='Történt-e denevérszámlálás', verbose_name='Denevér')),
                ('terkep', models.BooleanField(help_text='Történt-e térképezés', verbose_name='Térkép')),
                ('foto', models.BooleanField(help_text='Készült-e fénykép', verbose_name='Fotó')),
                ('leiras', models.BooleanField(help_text='Készült-e vagy módosult-e a barlang leírása', verbose_name='Leírás')),
                ('barlang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Cave')),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_datasheet_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_datasheet_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-ev'],
            },
        ),
        migrations.CreateModel(
            name='Microregion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('nev', models.CharField(help_text='Kistáj neve', max_length=255, verbose_name='Név')),
                ('kod', models.CharField(help_text='Kistáj kódja', max_length=255, verbose_name='Kód')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_microregion_creaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nev'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(verbose_name='Létrehozás időpontja')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Utolsó módosítás időpontja')),
                ('nev', models.CharField(max_length=255, verbose_name='Név')),
                ('creater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_region_creaters', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_region_updaters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nev'],
            },
        ),
        migrations.AddField(
            model_name='microregion',
            name='nagytaj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Region'),
        ),
        migrations.AddField(
            model_name='microregion',
            name='updater',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_microregion_updaters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attachment',
            name='barlang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Cave'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='creater',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_attachment_creaters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attachment',
            name='updater',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='common_attachment_updaters', to=settings.AUTH_USER_MODEL),
        ),
    ]
